{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nconst types = {\n  email: {\n    regex: /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+\\.([a-z]+)?$/i,\n    message: \"Preencha um email válido.\"\n  }\n};\n\nconst useForm = type => {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(null);\n\n  const validate = value => {\n    if (type === false) return true;\n\n    if (value.length === 0) {\n      setError(\"Preencha um valor\");\n      return false;\n    } else if (types[type] && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  };\n\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setValue(target.value);\n  };\n\n  return {\n    value,\n    setValue,\n    onChange,\n    error,\n    validate: () => validate(value),\n    onBlur: () => validate(value)\n  };\n};\n\n_s(useForm, \"w7KQe9YxDw3azT2mRpMgdux3M4c=\");\n\nexport default useForm;","map":{"version":3,"names":["React","types","email","regex","message","useForm","type","value","setValue","useState","error","setError","validate","length","test","onChange","target","onBlur"],"sources":["/home/rafa/Área de Trabalho/Dogs/dogs/src/Hooks/useForm.js"],"sourcesContent":["import React from 'react';\n\nconst types = {\n    email: {\n        regex: /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+\\.([a-z]+)?$/i,\n        message: \"Preencha um email válido.\"\n    },\n}\n\nconst useForm = (type) => {\n    const [value, setValue] = React.useState(\"\");\n    const [error, setError] = React.useState(null);\n\n    const validate = (value)=>{\n        if(type === false) return true;\n        if(value.length === 0) {\n            setError(\"Preencha um valor\");\n            return false;\n        } else if(types[type] && !types[type].regex.test(value)){\n            setError(types[type].message);\n            return false;\n        }else{\n            setError(null);\n            return true;\n        }\n    }\n\n    const onChange = ({target}) =>{\n        setValue(target.value);\n    }\n  return (\n    {\n        value, \n        setValue, \n        onChange, \n        error,\n        validate: () => validate(value),\n        onBlur: () => validate(value),\n    }\n  )\n}\n\nexport default useForm;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG;EACVC,KAAK,EAAE;IACHC,KAAK,EAAE,4CADJ;IAEHC,OAAO,EAAE;EAFN;AADG,CAAd;;AAOA,MAAMC,OAAO,GAAIC,IAAD,IAAU;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACS,QAAN,CAAe,IAAf,CAA1B;;EAEA,MAAMG,QAAQ,GAAIL,KAAD,IAAS;IACtB,IAAGD,IAAI,KAAK,KAAZ,EAAmB,OAAO,IAAP;;IACnB,IAAGC,KAAK,CAACM,MAAN,KAAiB,CAApB,EAAuB;MACnBF,QAAQ,CAAC,mBAAD,CAAR;MACA,OAAO,KAAP;IACH,CAHD,MAGO,IAAGV,KAAK,CAACK,IAAD,CAAL,IAAe,CAACL,KAAK,CAACK,IAAD,CAAL,CAAYH,KAAZ,CAAkBW,IAAlB,CAAuBP,KAAvB,CAAnB,EAAiD;MACpDI,QAAQ,CAACV,KAAK,CAACK,IAAD,CAAL,CAAYF,OAAb,CAAR;MACA,OAAO,KAAP;IACH,CAHM,MAGF;MACDO,QAAQ,CAAC,IAAD,CAAR;MACA,OAAO,IAAP;IACH;EACJ,CAZD;;EAcA,MAAMI,QAAQ,GAAG,QAAa;IAAA,IAAZ;MAACC;IAAD,CAAY;IAC1BR,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;EACH,CAFD;;EAGF,OACE;IACIA,KADJ;IAEIC,QAFJ;IAGIO,QAHJ;IAIIL,KAJJ;IAKIE,QAAQ,EAAE,MAAMA,QAAQ,CAACL,KAAD,CAL5B;IAMIU,MAAM,EAAE,MAAML,QAAQ,CAACL,KAAD;EAN1B,CADF;AAUD,CA/BD;;GAAMF,O;;AAiCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}